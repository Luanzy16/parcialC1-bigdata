name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Revisión de código limpio con flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Ejecutar flake8
        run: flake8 . --count --show-source --statistics

  test:
    name: Ejecución de pruebas unitarias
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest moto boto3

      - name: Ejecutar pruebas con pytest
        run: PYTHONPATH=$(pwd) pytest scrapping/test/ parser/test/

  deploy:
    name: Despliegue en AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1  # Cambia a la región de tu cuenta AWS
      
       - name: Configurar entorno virtual y dependencias
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install zappa

      - name: Deploy with Zappa
        run: |
        
          source env/bin/activate  # Activar entorno virtual
          cd parser
          ls  # Verificar archivos dentro de Parsing
          
          if zappa status dev_parser || true; then
            zappa update dev_parser
          else
            zappa deploy dev_parser
          fi
        

      # 🔹 Paso 7: Verificar despliegue
      - name: Check Zappa Status
        run: |
          source env/bin/activate  # Activarlo
          cd parser
          zappa status dev_parser


